import { buildModuleTree } from './buildModuleTree';
import { DEFAULT_CONFIG, FliegdocConfig, Tree } from './model';

/**
 * Builds a {@link Tree} for a configuration generated by applying the `configOverrides` on the {@link DEFAULT_CONFIG}
 *
 * @param configOverrides - overrides of the default configuration
 * @returns the generated documentation-ready {@link Tree}
 * @example
 * ```ts
 * import { buildTreeForConfig } from 'fliegdoc';
 *
 * const tree = buildTreeForConfig(config);
 * ```
 */
export function buildTreeForConfig(
	configOverrides?: Partial<FliegdocConfig>
): Tree {
	const finalConfig: FliegdocConfig = {
		...DEFAULT_CONFIG,
		...(configOverrides ?? {})
	};
	let tree: Tree = {};

	for (const module of finalConfig.modules) {
		const [moduleName, moduleTree] = buildModuleTree(module);
		tree = { ...tree };
		tree[moduleName] = moduleTree;
	}

	return tree;
}

export * from './config';
export * from './buildModuleTree';
export * from './model';
export * from './server';
export * from './builders';
